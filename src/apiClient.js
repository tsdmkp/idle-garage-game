// src/apiClient.js - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –¥–ª—è API. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_REACT_APP_API_URL,
// –µ—Å–ª–∏ –æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ Vercel), –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
const API_URL = (import.meta.env.VITE_REACT_APP_API_URL || 'http://localhost:3000') + '/api';

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è API-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±—ç–∫–µ–Ω–¥—É.
 * @param {string} endpoint - –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ API (–Ω–∞–ø—Ä–∏–º–µ—Ä, '/game_state').
 * @param {string} method - –ú–µ—Ç–æ–¥ HTTP-–∑–∞–ø—Ä–æ—Å–∞ (GET, POST, PUT, PATCH). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'GET'.
 * @param {object} [options] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞.
 * @param {object} [options.body] - –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ POST/PUT/PATCH.
 * @param {object} [options.params] - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è GET-–∑–∞–ø—Ä–æ—Å–æ–≤ (–±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ URL –∫–∞–∫ query string).
 * @returns {Promise<object>} - –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –≤ JSON-–æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.
 * @throws {Error} - –í—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ OK.
 */
const apiClient = async (endpoint, method = 'GET', { body, params } = {}) => {
    // –°–æ–∑–¥–∞–µ–º URL-–æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞
    const url = new URL(`${API_URL}${endpoint}`);

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ URL –∫–∞–∫ query string
    if (params) {
        Object.keys(params).forEach(key => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–µ undefined –∏ –Ω–µ null, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if (params[key] !== undefined && params[key] !== null) {
                url.searchParams.append(key, params[key]);
            }
        });
    }

    // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ Telegram.WebApp.
    // –ï—Å–ª–∏ Telegram.WebApp –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–µ–∑ –º–æ–∫–∞), initData –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π.
    const initData = window.Telegram?.WebApp?.initData || '';

    // --- –î–û–ë–ê–í–õ–ï–ù–ù–´–ô –õ–û–ì –î–õ–Ø –û–¢–õ–ê–î–ö–ò initData ---
    // –≠—Ç–æ—Ç –ª–æ–≥ –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ initData –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º API-–∑–∞–ø—Ä–æ—Å–µ.
    console.log('DEBUG_API_CLIENT: initData value:', initData);
    // -------------------------------------------
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –æ–ø—Ü–∏–π –¥–ª—è fetch-–∑–∞–ø—Ä–æ—Å–∞
    const options = {
        method, // –ú–µ—Ç–æ–¥ HTTP (GET, POST –∏ —Ç.–¥.)
        headers: {
            'Content-Type': 'application/json', // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –±—É–¥–µ—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
            'X-Telegram-Init-Data': initData // –î–æ–±–∞–≤–ª—è–µ–º initData –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –±—ç–∫–µ–Ω–¥–µ
        }
    };

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è POST, PUT, PATCH), –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ JSON —Å—Ç—Ä–æ–∫—É
    if (body) {
        options.body = JSON.stringify(body);
    }

    // --- –î–û–ë–ê–í–õ–ï–ù–ù–û–ï –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –û–¢–õ–ê–î–ö–ò –ó–ê–ü–†–û–°–û–í ---
    console.log(`üì§ ${method} ${url.toString()}`); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∑–∞–ø—Ä–æ—Å

    // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ initData –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
    if (initData) {
        console.log('üì° X-Telegram-Init-Data header added to request');
        // –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ initData —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ª–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏—Ö –Ω–∞–ª–∏—á–∏–µ,
        // –∞ –Ω–µ –ø–æ–ª–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–∫–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ª–æ–≥–∞—Ö.
        if (initData.includes('startapp=') || initData.includes('start_param=')) {
            const hasStartApp = initData.includes('startapp=');
            const hasStartParam = initData.includes('start_param=');
            console.log('üîó Referral data detected in initData:', { hasStartApp, hasStartParam });
        }
    } else {
        console.log('‚ö†Ô∏è No Telegram initData available for request'); // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (body) {
        console.log('üì¶ Request body:', body);
    }
    // -----------------------------------------------------------

    try {
        // –í—ã–ø–æ–ª–Ω—è–µ–º fetch-–∑–∞–ø—Ä–æ—Å
        const response = await fetch(url.toString(), options);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω—ã–º (—Å—Ç–∞—Ç—É—Å 2xx)
        if (!response.ok) {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ —É—Å–ø–µ—à–Ω—ã–π, –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞
            const errorText = await response.text();
            console.error(`[apiClient] Error ${response.status} for ${endpoint}:`, errorText);
            // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–æ–≤—É—é –æ—à–∏–±–∫—É —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);
        }
        
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω—ã–π, –ø–∞—Ä—Å–∏–º JSON –∏–∑ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
        const data = await response.json();
        console.log(`üì• ${method} ${endpoint} success:`, data); // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return data; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    } catch (error) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è fetch-–∑–∞–ø—Ä–æ—Å–∞
        console.error(`[apiClient] Fetch error for ${endpoint}:`, error);
        throw error; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –≤—ã–∑—ã–≤–∞—é—â–µ–º –∫–æ–¥–µ
    }
};

export default apiClient; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é apiClient –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è