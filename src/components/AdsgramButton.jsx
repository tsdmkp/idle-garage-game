import React, { useEffect, useState } from 'react';

const AdsgramButton = ({ 
  onReward, 
  disabled = false, 
  rewardAmount = 100,
  buttonText = "üì∫ –ë–æ–Ω—É—Å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã",
  blockId = "12355"
}) => {
  const [isLoading, setIsLoading] = useState(false);
  const [adsgram, setAdsgram] = useState(null);
  const [cooldownTime, setCooldownTime] = useState(0);
  const [isReady, setIsReady] = useState(false);
  const [error, setError] = useState(null);
  const [sdkStatus, setSdkStatus] = useState('loading'); // loading, loaded, failed

  useEffect(() => {
    let retryCount = 0;
    const maxRetries = 15; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    let timeoutId;

    const checkSDK = () => {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Adsgram SDK, –ø–æ–ø—ã—Ç–∫–∞ ${retryCount + 1}/${maxRetries}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ window.Adsgram
      if (window.Adsgram) {
        console.log('‚úÖ Adsgram SDK –Ω–∞–π–¥–µ–Ω!');
        initAdsgram();
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ DOM
      const script = document.querySelector('script[src*="adsgram"]');
      if (script) {
        console.log('üìú Adsgram —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω –≤ DOM, –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏...');
      } else {
        console.warn('‚ö†Ô∏è Adsgram —Å–∫—Ä–∏–ø—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ DOM!');
      }
      
      retryCount++;
      
      if (retryCount < maxRetries) {
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        const delay = Math.min(1000 + (retryCount * 500), 5000);
        timeoutId = setTimeout(checkSDK, delay);
      } else {
        console.error('‚ùå Adsgram SDK –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫');
        setSdkStatus('failed');
        setError('SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å SDK –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
        loadSDKManually();
      }
    };

    const initAdsgram = () => {
      try {
        if (!blockId) {
          throw new Error('Block ID –Ω–µ —É–∫–∞–∑–∞–Ω');
        }
        
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Adsgram —Å Block ID:', blockId);
        const adsgramInstance = window.Adsgram.init({ 
          blockId: blockId,
          debug: true // –í–∫–ª—é—á–∞–µ–º debug –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        });
        
        setAdsgram(adsgramInstance);
        setIsReady(true);
        setSdkStatus('loaded');
        setError(null);
        console.log('‚úÖ Adsgram —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Adsgram:', error);
        setError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        setSdkStatus('failed');
      }
    };

    const loadSDKManually = () => {
      console.log('üîß –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Adsgram SDK...');
      
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
      const existingScript = document.querySelector('script[src*="adsgram"]');
      if (existingScript) {
        existingScript.remove();
      }
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
      const script = document.createElement('script');
      script.src = 'https://sad.adsgram.ai/js/adsgram.min.js';
      script.async = true;
      
      script.onload = () => {
        console.log('‚úÖ Adsgram SDK –∑–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
        setSdkStatus('loaded');
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        setTimeout(() => {
          if (window.Adsgram) {
            initAdsgram();
          }
        }, 100);
      };
      
      script.onerror = () => {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Adsgram SDK –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
        setSdkStatus('failed');
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å SDK');
      };
      
      document.head.appendChild(script);
    };

    // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    setSdkStatus('loading');
    checkSDK();

    return () => {
      if (timeoutId) {
        clearTimeout(timeoutId);
      }
    };
  }, [blockId]);

  // –ö—É–ª–¥–∞—É–Ω —Ç–∞–π–º–µ—Ä
  useEffect(() => {
    if (cooldownTime > 0) {
      const timer = setInterval(() => {
        setCooldownTime(prev => Math.max(0, prev - 1));
      }, 1000);
      return () => clearInterval(timer);
    }
  }, [cooldownTime]);

  const handleShowAd = async () => {
    if (!adsgram || isLoading || disabled || cooldownTime > 0 || !isReady) {
      console.log('üö´ –ü–æ–∫–∞–∑ —Ä–µ–∫–ª–∞–º—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', {
        hasAdsgram: !!adsgram,
        isLoading,
        disabled,
        cooldownTime,
        isReady,
        sdkStatus
      });
      return;
    }

    setIsLoading(true);
    setError(null);
    console.log('üì∫ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º—É Adsgram...');

    try {
      await adsgram.show().then(() => {
        console.log('‚úÖ –†–µ–∫–ª–∞–º–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞, –Ω–∞—á–∏—Å–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É:', rewardAmount);
        onReward(rewardAmount);
        setCooldownTime(300); // 5 –º–∏–Ω—É—Ç –∫—É–ª–¥–∞—É–Ω
        
        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        if (window.Telegram?.WebApp?.HapticFeedback) {
          window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
        }
      }).catch((result) => {
        console.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–∫–∞–∑–æ–º —Ä–µ–∫–ª–∞–º—ã:', result);
        
        switch (result?.error) {
          case 'AdBlock':
            setError('–û—Ç–∫–ª—é—á–∏—Ç–µ AdBlock');
            alert('‚ö†Ô∏è –û—Ç–∫–ª—é—á–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã');
            break;
          case 'TimeLimit':
            setError('–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ');
            setCooldownTime(60);
            alert('‚è∞ –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –ø–æ–∫–∞–∑—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.');
            break;
          case 'NotReady':
            setError('–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
            setTimeout(() => {
              setError(null);
              setIsReady(true);
            }, 3000);
            break;
          default:
            console.error('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:', result);
            setError('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            break;
        }
      });
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–µ–∫–ª–∞–º—ã:', error);
      setError('–û—à–∏–±–∫–∞ —Ä–µ–∫–ª–∞–º—ã');
    } finally {
      setIsLoading(false);
    }
  };

  const formatTime = (seconds) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const getButtonContent = () => {
    if (isLoading) return 'üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...';
    if (cooldownTime > 0) return `‚è∞ ${formatTime(cooldownTime)}`;
    if (error) return `‚ö†Ô∏è ${error}`;
    if (sdkStatus === 'loading') return '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ SDK...';
    if (sdkStatus === 'failed') return '‚ùå SDK –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
    if (!isReady || !adsgram) return '‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...';
    return `${buttonText} (+${rewardAmount} üí∞)`;
  };

  const isButtonDisabled = disabled || isLoading || cooldownTime > 0 || 
                          !isReady || !adsgram || sdkStatus !== 'loaded';

  return (
    <div style={{ textAlign: 'center' }}>
      <button 
        onClick={handleShowAd}
        disabled={isButtonDisabled}
        style={{
          padding: '12px 20px',
          borderRadius: '10px',
          border: 'none',
          fontSize: '14px',
          fontWeight: 'bold',
          cursor: isButtonDisabled ? 'not-allowed' : 'pointer',
          background: isButtonDisabled 
            ? 'linear-gradient(135deg, #666, #555)' 
            : 'linear-gradient(135deg, #ff6b6b, #ee5a24)',
          color: 'white',
          transition: 'all 0.3s ease',
          opacity: isButtonDisabled ? 0.6 : 1,
          minWidth: '180px',
          boxShadow: isButtonDisabled 
            ? 'none' 
            : '0 4px 12px rgba(255, 107, 107, 0.3)',
          transform: isLoading ? 'scale(0.95)' : 'scale(1)'
        }}
      >
        {getButtonContent()}
      </button>
      
      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π */}
      <div style={{
        fontSize: '11px',
        color: '#999',
        marginTop: '5px'
      }}>
        {sdkStatus === 'loading' && '–ó–∞–≥—Ä—É–∑–∫–∞ Adsgram SDK...'}
        {sdkStatus === 'failed' && '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SDK'}
        {sdkStatus === 'loaded' && isReady && '–ì–æ—Ç–æ–≤ –∫ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º—ã'}
        {error && `–û—à–∏–±–∫–∞: ${error}`}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è debug) */}
      {process.env.NODE_ENV === 'development' && (
        <button 
          onClick={() => {
            console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Adsgram:', {
              windowAdsgram: !!window.Adsgram,
              adsgramInstance: !!adsgram,
              isReady,
              sdkStatus,
              error,
              blockId
            });
          }}
          style={{
            marginTop: '5px',
            padding: '5px 10px',
            fontSize: '10px',
            background: '#333',
            color: 'white',
            border: 'none',
            borderRadius: '5px'
          }}
        >
          üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        </button>
      )}
    </div>
  );
};

export default AdsgramButton;