import React from 'react';
import './StaffScreen.css'; // –£–±–µ–¥–∏—Å—å, —á—Ç–æ CSS —Ñ–∞–π–ª –ø–æ–¥–∫–ª—é—á–µ–Ω

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –ü–µ—Ä—Å–æ–Ω–∞–ª–∞
// –ü–æ–ª—É—á–∞–µ—Ç:
// - staffCatalog: –û–±—ä–µ–∫—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
// - hiredStaff: –û–±—ä–µ–∫—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –Ω–∞–Ω—è—Ç—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ { staffId: level }
// - gameCoins: –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –º–æ–Ω–µ—Ç –∏–≥—Ä–æ–∫–∞
// - onHireOrUpgrade: –§—É–Ω–∫—Ü–∏—è –∏–∑ App.jsx –¥–ª—è –Ω–∞–π–º–∞/—É–ª—É—á—à–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç staffId)
// - calculateCost: –§—É–Ω–∫—Ü–∏—è –∏–∑ App.jsx –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–∞–π–º–∞/—É–ª—É—á—à–µ–Ω–∏—è (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç staffId)
function StaffScreen({ staffCatalog, hiredStaff, gameCoins, onHireOrUpgrade, calculateCost }) {

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã
  if (!staffCatalog || !hiredStaff || calculateCost === undefined) {
    console.error("StaffScreen: Missing required props (staffCatalog, hiredStaff, or calculateCost).");
    return <div className="staff-screen error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª–∞!</div>;
  }

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–Ω—è—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
  const totalStaffCount = Object.values(hiredStaff).reduce((sum, level) => sum + level, 0);

  // –õ–æ–≥ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  // console.log("StaffScreen rendering with hiredStaff:", hiredStaff, "gameCoins:", gameCoins);

  return (
    <div className="staff-screen">
      <div className="staff-header">
        <h2>üë• –ü–µ—Ä—Å–æ–Ω–∞–ª</h2>
        <div className="staff-summary">
          <div className="total-staff-count">
            <span className="count-icon">üë®‚Äçüíº</span>
            <span className="count-text">–í—Å–µ–≥–æ –Ω–∞–Ω—è—Ç–æ: {totalStaffCount}</span>
          </div>
        </div>
      </div>
      
      <div className="staff-list">
        {/* –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –º–∞—Å—Å–∏–≤ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π –∏ –∏—Ç–µ—Ä–∏—Ä—É–µ–º */}
        {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º Object.entries, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏ ID (–∫–ª—é—á) –∏ –¥–∞–Ω–Ω—ã–µ (–∑–Ω–∞—á–µ–Ω–∏–µ) */}
        {Object.entries(staffCatalog).map(([staffId, staffInfo]) => {

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
          if (!staffInfo || !staffId || typeof staffInfo.maxLevel !== 'number') {
              console.warn("StaffScreen: Skipping invalid staff catalog entry:", staffInfo);
              return null; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–Ω–¥–µ—Ä —ç—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
          }

          // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∏–ª–∏ 0, –µ—Å–ª–∏ –Ω–µ –Ω–∞–Ω—è—Ç)
          const currentLevel = hiredStaff[staffId] || 0;
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
          const isMaxLevel = currentLevel >= staffInfo.maxLevel;

          // --- –õ–æ–≥–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ ---
          // console.log(`StaffScreen: Processing ${staffId} - Level: ${currentLevel}, MaxLevel: ${staffInfo.maxLevel}, IsMax: ${isMaxLevel}`);

          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–π–º–∞ –∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏—è)
          let cost = Infinity; // –ù–∞—á–∏–Ω–∞–µ–º —Å Infinity –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          if (!isMaxLevel && typeof calculateCost === 'function') {
              try {
                  cost = calculateCost(staffId); // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ App.jsx
                  // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ NaN, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                  if (isNaN(cost)) {
                      console.error(`StaffScreen: calculateCost returned NaN for ${staffId}`);
                      cost = Infinity;
                  }
              } catch (error) {
                  console.error("Error calling calculateCost for", staffId, error);
                  cost = Infinity; // –°—Ç–∞–≤–∏–º Infinity –ø—Ä–∏ –æ—à–∏–±–∫–µ
              }
          } else if (isMaxLevel) {
              cost = Infinity; // –Ø–≤–Ω–æ —Å—Ç–∞–≤–∏–º Infinity –¥–ª—è –º–∞–∫—Å. —É—Ä–æ–≤–Ω—è
          }
          // –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –µ–µ —Ç–∏–ø
          // console.log(`StaffScreen: Calculated cost for ${staffId}:`, cost, "(type:", typeof cost, ")");

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –º–æ–Ω–µ—Ç (cost –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –∏ –Ω–µ Infinity)
          const canAfford = typeof cost === 'number' && cost !== Infinity && gameCoins >= cost;
          // console.log(`StaffScreen: Can afford ${staffId}? Cost=${cost}, Coins=${gameCoins}, Afford=${canAfford}`);

          // --- –†–µ–Ω–¥–µ—Ä –ö–∞—Ä—Ç–æ—á–∫–∏ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ---
          return (
            <div
              key={staffId} // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∫–∞–∫ –∫–ª—é—á
              className={`staff-item ${currentLevel > 0 ? 'hired' : ''} ${isMaxLevel ? 'max-level' : ''}`}
            >
              {/* –ò–∫–æ–Ω–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –±–µ–π–¥–∂–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ */}
              <div className="staff-icon-container">
                <div className="staff-icon">{staffInfo.icon || '?'}</div>
                {currentLevel > 0 && (
                  <div className="staff-count-badge">
                    <span className="count-number">{currentLevel}</span>
                  </div>
                )}
              </div>

              {/* –ë–ª–æ–∫ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
              <div className="staff-details">
                <div className="staff-name-row">
                  <h3>{staffInfo.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}</h3>
                  {currentLevel > 0 && (
                    <span className="staff-quantity">√ó{currentLevel}</span>
                  )}
                </div>
                <p className="staff-description">{staffInfo.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
                <div className="staff-progress">
                  <span className="staff-level">–£—Ä–æ–≤–µ–Ω—å: {currentLevel} / {staffInfo.maxLevel}</span>
                  <div className="level-progress-bar">
                    <div 
                      className="level-progress-fill" 
                      style={{ width: `${(currentLevel / staffInfo.maxLevel) * 100}%` }}
                    ></div>
                  </div>
                </div>
                {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–æ–Ω—É—Å, –µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–∞–Ω—è—Ç –∏ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–Ω—É—Å–∞ –µ—Å—Ç—å */}
                {currentLevel > 0 && typeof staffInfo.getBonus === 'function' && (
                    <p className="staff-bonus">
                        {/* –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–æ–Ω—É—Å */}
                        üí™ –ë–æ–Ω—É—Å: +
                        {staffInfo.getBonus(currentLevel).incomeBoostPercent !== undefined
                            ? `${staffInfo.getBonus(currentLevel).incomeBoostPercent}% –∫ –¥–æ—Ö–æ–¥—É`
                            : staffInfo.getBonus(currentLevel).speedBoostPercent !== undefined
                            ? `${staffInfo.getBonus(currentLevel).speedBoostPercent}% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏`
                            : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–æ–Ω—É—Å' // Fallback
                        }
                    </p>
                )}
              </div>

              {/* –ë–ª–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π –¥–µ–π—Å—Ç–≤–∏—è (–ù–∞–Ω—è—Ç—å/–£–ª—É—á—à–∏—Ç—å –∏–ª–∏ –ú–∞–∫—Å.–£—Ä–æ–≤–µ–Ω—å) */}
              <div className="staff-action">
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–Ω—É –∏ –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π */}
                {!isMaxLevel ? (
                  <>
                    {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å */}
                    <div className={`staff-cost ${!canAfford ? 'insufficient' : ''}`}>
                      <span className="cost-icon">üí∞</span>
                      <span className="cost-amount">
                        {/* --- –ü–†–û–í–ï–†–ö–ê –ø–µ—Ä–µ–¥ toLocaleString --- */}
                        {(typeof cost !== 'number' || cost === Infinity)
                            ? 'N/A' // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º N/A –µ—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ —á–∏—Å–ª–æ –∏–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å
                            : cost.toLocaleString() // –ò–Ω–∞—á–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ
                        }
                        {/* ------------------------------------ */}
                      </span>
                    </div>
                    {/* –ö–Ω–æ–ø–∫–∞ –ù–∞–Ω—è—Ç—å/–£–ª—É—á—à–∏—Ç—å */}
                    <button
                      onClick={() => onHireOrUpgrade(staffId)}
                      // –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –µ—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç –ò–õ–ò —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ —á–∏—Å–ª–æ/–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å
                      disabled={!canAfford}
                      className="hire-upgrade-button"
                    >
                      <span className="button-icon">
                        {currentLevel === 0 ? 'üëã' : '‚¨ÜÔ∏è'}
                      </span>
                      <span className="button-text">
                        {/* –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è */}
                        {currentLevel === 0 ? '–ù–∞–Ω—è—Ç—å' : '–£–ª—É—á—à–∏—Ç—å'}
                      </span>
                    </button>
                  </>
                ) : (
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∫—É, –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
                  <div className="max-level-indicator">
                    <span className="max-level-icon">‚≠ê</span>
                    <span className="max-level-label">–ú–ê–ö–°. –£–†–û–í–ï–ù–¨</span>
                  </div>
                )}
              </div>
            </div> // –ó–∞–∫—Ä—ã–≤–∞–µ–º .staff-item
          );
        })} {/* –ö–æ–Ω–µ—Ü .map */}
      </div> {/* –ó–∞–∫—Ä—ã–≤–∞–µ–º .staff-list */}
    </div> // –ó–∞–∫—Ä—ã–≤–∞–µ–º .staff-screen
  );
}

export default StaffScreen; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç