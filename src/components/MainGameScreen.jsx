import React, { useState, useEffect } from 'react';
import './MainGameScreen.css';

const MainGameScreen = ({ 
  car, 
  incomeRate, 
  accumulatedIncome, 
  maxAccumulation,
  gameCoins,
  buildings,
  onCollect, 
  onTuneClick, 
  onOpenCarSelector,
  onBuildingClick 
}) => {
  const [collectAnimation, setCollectAnimation] = useState(false);
  const [coins, setCoins] = useState([]);
  
  // –ü—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä–∞
  const progressPercentage = maxAccumulation > 0 
    ? Math.min((accumulatedIncome / maxAccumulation) * 100, 100) 
    : 0;
    
  const canCollect = Math.floor(accumulatedIncome) > 0;
  
  // –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  const handleCollect = () => {
    if (!canCollect) return;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –º–æ–Ω–µ—Ç
    const coinCount = Math.min(Math.floor(accumulatedIncome / 10), 20) + 5;
    const newCoins = [];
    
    for (let i = 0; i < coinCount; i++) {
      newCoins.push({
        id: Date.now() + i,
        left: 30 + Math.random() * 40,
        delay: Math.random() * 0.5
      });
    }
    
    setCoins(newCoins);
    setCollectAnimation(true);
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±–æ—Ä–∞
    onCollect();
    
    // –û—á–∏—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    setTimeout(() => {
      setCollectAnimation(false);
      setCoins([]);
    }, 2000);
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª
  const formatNumber = (num) => {
    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
    return Math.floor(num).toString();
  };
  
  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–¥–∞–Ω–∏—è
  const getBuildingShortName = (name) => {
    const nameMap = {
      'car_wash': '–ú–æ–π–∫–∞',
      'service_station': '–°–µ—Ä–≤–∏—Å', 
      'tire_shop': '–®–∏–Ω—ã',
      'drift_school': '–î—Ä–∏—Ñ—Ç'
    };
    return nameMap[name] || name;
  };
  
  return (
    <div className="main-game-screen">
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞ */}
      <div className="game-area">
        {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã */}
        <div className="car-showcase">
          <div className="car-name-plate">
            <h2>{car?.name || '–ó–∞–≥—Ä—É–∑–∫–∞...'}</h2>
          </div>
          
          <div className="car-image-container">
            <img 
              src={car?.imageUrl || '/placeholder-car.png'} 
              alt={car?.name}
              className={`car-main-image ${canCollect ? 'car-earning' : ''}`}
              onError={(e) => { 
                e.target.onerror = null; 
                e.target.src = '/placeholder-car.png'; 
              }}
            />
            
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ—Ö–æ–¥–∞ */}
            <div className="income-indicator">
              <span className="income-icon">üí∞</span>
              <span className="income-text">+{formatNumber(incomeRate)}/—á–∞—Å</span>
            </div>
          </div>
          
          {/* –°—Ç–∞—Ç—ã –º–∞—à–∏–Ω—ã (–∫–æ–º–ø–∞–∫—Ç–Ω–æ) */}
          <div className="car-stats-compact">
            <div className="stat-item">
              <span className="stat-icon">‚ö°</span>
              <span className="stat-value">{car?.stats?.power || 0}</span>
            </div>
            <div className="stat-item">
              <span className="stat-icon">üèéÔ∏è</span>
              <span className="stat-value">{car?.stats?.speed || 0}</span>
            </div>
            <div className="stat-item">
              <span className="stat-icon">‚ú®</span>
              <span className="stat-value">{car?.stats?.style || 0}</span>
            </div>
            <div className="stat-item">
              <span className="stat-icon">üîß</span>
              <span className="stat-value">{car?.stats?.reliability || 0}</span>
            </div>
          </div>
        </div>
        
        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è */}
        <div className="income-progress-section">
          <div className="progress-container">
            <div className="progress-bar">
              <div 
                className="progress-fill" 
                style={{ width: `${progressPercentage}%` }}
              >
                <div className="progress-shine"></div>
              </div>
              <div className="progress-text">
                {formatNumber(accumulatedIncome)} / {formatNumber(maxAccumulation)}
              </div>
            </div>
          </div>
          
          {/* –ë–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞ —Å–±–æ—Ä–∞ */}
          <button 
            className={`collect-button-main ${canCollect ? 'can-collect' : ''} ${collectAnimation ? 'collecting' : ''}`}
            onClick={handleCollect}
            disabled={!canCollect}
          >
            <span className="button-icon">üí∞</span>
            <span className="button-text">
              {canCollect ? `–°–û–ë–†–ê–¢–¨ ${formatNumber(accumulatedIncome)}` : '–ù–ê–ö–ê–ü–õ–ò–í–ê–ï–¢–°–Ø...'}
            </span>
          </button>
        </div>
        
        {/* –ü–ª–∞–≤–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <button 
          className="floating-action-button left"
          onClick={onOpenCarSelector}
          title="–í—ã–±—Ä–∞—Ç—å –º–∞—à–∏–Ω—É"
        >
          üöó
        </button>
        
        <button 
          className="floating-action-button right"
          onClick={onTuneClick}
          title="–¢—é–Ω–∏–Ω–≥"
        >
          üîß
        </button>
      </div>
      
      {/* –ó–æ–Ω–∞ –ø–æ—Å—Ç—Ä–æ–µ–∫ - —É–ª—É—á—à–µ–Ω–Ω–∞—è */}
      <div className="buildings-integrated">
        <h3 className="buildings-section-title">üè¢ –ü–æ—Å—Ç—Ä–æ–π–∫–∏ –ì–∞—Ä–∞–∂–∞</h3>
        <div className="buildings-grid-minimal">
          {buildings.map((building) => (
            <div 
              key={building.id}
              className={`building-item-minimal ${building.level > 0 ? 'active' : ''}`}
              onClick={() => onBuildingClick(building.name)}
              title={`${getBuildingShortName(building.name)} - –£—Ä–æ–≤–µ–Ω—å ${building.level}`}
            >
              <div className="building-icon">{building.icon}</div>
              <div className="building-name">{getBuildingShortName(building.name)}</div>
              <div className="building-level-badge">
                {building.level > 0 ? building.level : '+'}
              </div>
            </div>
          ))}
        </div>
      </div>
      
      {/* –ê–Ω–∏–º–∞—Ü–∏—è –º–æ–Ω–µ—Ç */}
      <div className="coins-animation-container">
        {coins.map(coin => (
          <div 
            key={coin.id} 
            className="flying-coin"
            style={{ 
              left: `${coin.left}%`,
              animationDelay: `${coin.delay}s`
            }}
          >
            üí∞
          </div>
        ))}
      </div>
    </div>
  );
};


export default MainGameScreen;