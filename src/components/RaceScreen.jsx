import React, { useState, useEffect } from 'react';
import './RaceScreen.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–∫—Ä–∞–Ω–∞ –≥–æ–Ω–æ–∫
function RaceScreen({ playerCar, onStartRace }) {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [selectedDifficulty, setSelectedDifficulty] = useState('easy'); // –í—ã–±—Ä–∞–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å
  const [raceResult, setRaceResult] = useState(null); // –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –≥–æ–Ω–∫–∏ ('win', 'lose', 'error', null)
  const [reward, setReward] = useState(null); // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –≥–æ–Ω–∫—É { coins: number, xp: number }
  const [isRacing, setIsRacing] = useState(false); // –§–ª–∞–≥: –∏–¥–µ—Ç –ª–∏ —Å–∏–º—É–ª—è—Ü–∏—è –≥–æ–Ω–∫–∏
  const [shouldAnimate, setShouldAnimate] = useState(false); // –§–ª–∞–≥: –Ω—É–∂–Ω–æ –ª–∏ –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –º–∞—à–∏–Ω–∫–∏

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const handleDifficultyChange = (difficulty) => {
    if (isRacing) return; // –ù–µ –º–µ–Ω—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å –≤–æ –≤—Ä–µ–º—è –≥–æ–Ω–∫–∏
    setSelectedDifficulty(difficulty);
    setRaceResult(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    setReward(null);     // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–∞–≥—Ä–∞–¥—É
    setShouldAnimate(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –ó–∞–µ–∑–¥!"
  const handleRaceClick = async () => {
    // –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –∏–¥–µ—Ç –≥–æ–Ω–∫–∞ –∏–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω—ã –∏–≥—Ä–æ–∫–∞
    if (isRacing || !playerCar) return;

    setIsRacing(true);       // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≥–æ–Ω–∫–∏ (–±–ª–æ–∫–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É)
    setRaceResult(null);     // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    setReward(null);         // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
    setShouldAnimate(true);  // –ó–∞–ø—É—Å–∫–∞–µ–º CSS-–∞–Ω–∏–º–∞—Ü–∏—é (–¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å .animate)

    console.log(`RaceScreen: Starting race with difficulty: ${selectedDifficulty}`);
    console.log("RaceScreen: Calling onStartRace...");

    // –í—ã–∑—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å–∏–º—É–ª—è—Ü–∏–∏ –∏–∑ App.jsx
    const resultData = await onStartRace(selectedDifficulty);
    console.log("RaceScreen: onStartRace returned:", resultData);

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (resultData && typeof resultData.result === 'string') {
        console.log("RaceScreen: Processing resultData:", resultData);
        setRaceResult(resultData.result); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (win/lose/error)
        setReward(resultData.reward || null); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É (–∏–ª–∏ null)
        console.log("RaceScreen: States updated (result, reward).");
    } else {
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤–µ—Ä–Ω—É–ª–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        console.error("RaceScreen: onStartRace returned invalid data:", resultData);
        setRaceResult('error'); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏
        setReward(null);        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
    }

    setIsRacing(false); // –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –≥–æ–Ω–∫–∏ –ü–û–°–õ–ï –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    console.log("RaceScreen: setIsRacing set to false.");
    // –ê–Ω–∏–º–∞—Ü–∏—è –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω–∞ —á–µ—Ä–µ–∑ useEffect –Ω–∏–∂–µ
  };

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –≥–æ–Ω–∫–∏
  useEffect(() => {
      let timer;
      // –ï—Å–ª–∏ –≥–æ–Ω–∫–∞ –ù–ï –∏–¥–µ—Ç –ò –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (win/lose/error)
      if (!isRacing && raceResult) {
          // –°—Ç–∞–≤–∏–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ–ª–∞ "–¥–æ–µ—Ö–∞—Ç—å" –¥–æ —Ñ–∏–Ω–∏—à–∞
          timer = setTimeout(() => {
              console.log("RaceScreen: Resetting animation via timer.");
              setShouldAnimate(false); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å .animate
          }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 1 —Å–µ–∫—É–Ω–¥—É –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      }
      // –ï—Å–ª–∏ –≥–æ–Ω–∫–∞ –Ω–µ –∏–¥–µ—Ç –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)
      else if (!isRacing && !raceResult) {
          console.log("RaceScreen: Resetting animation immediately.");
          setShouldAnimate(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å—Ä–∞–∑—É
      }

      // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      return () => clearTimeout(timer);
  }, [isRacing, raceResult]); // –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ñ–ª–∞–≥–∞ –≥–æ–Ω–∫–∏ –∏ –Ω–∞–ª–∏—á–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞


  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã –∏–≥—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const { name: carName, stats: carStats, imageUrl } = playerCar || {};
  const opponentIcon = 'üèéÔ∏è'; // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –º–∞—à–∏–Ω—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞

  // –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return (
    <div className="race-screen">
      <h2>–£–ª–∏—á–Ω—ã–µ –ì–æ–Ω–∫–∏ (PvE)</h2>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—à–∏–Ω–µ –∏–≥—Ä–æ–∫–∞ */}
      {playerCar ? (
          <div className="player-car-info">
              <h3>–¢–≤–æ—è –º–∞—à–∏–Ω–∞: {carName}</h3>
              {/* –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç–∞–º —á–µ—Ä–µ–∑ ?. */}
              <p>P: {carStats?.power} | S: {carStats?.speed} | R: {carStats?.reliability}</p>
          </div>
      ) : (
          <div className="player-car-info">
              <p>–ú–∞—à–∏–Ω–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞!</p>
          </div>
      )}


      {/* –í—ã–±–æ—Ä –°–ª–æ–∂–Ω–æ—Å—Ç–∏ */}
      <div className="difficulty-selector">
        <h4>–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å:</h4>
        {/* –ö–Ω–æ–ø–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è */}
        <button onClick={() => handleDifficultyChange('easy')} className={selectedDifficulty === 'easy' ? 'active' : ''} disabled={isRacing}>–õ–µ–≥–∫–æ</button>
        <button onClick={() => handleDifficultyChange('medium')} className={selectedDifficulty === 'medium' ? 'active' : ''} disabled={isRacing}>–°—Ä–µ–¥–Ω–µ</button>
        <button onClick={() => handleDifficultyChange('hard')} className={selectedDifficulty === 'hard' ? 'active' : ''} disabled={isRacing}>–°–ª–æ–∂–Ω–æ</button>
      </div>

      {/* --- –ó–æ–Ω–∞ –ê–Ω–∏–º–∞—Ü–∏–∏ –ì–æ–Ω–∫–∏ --- */}
      <div className="race-animation-area">
        <div className="race-track">
          {/* –ú–∞—à–∏–Ω–∞ –∏–≥—Ä–æ–∫–∞ */}
          {/* –ö–ª–∞—Å—Å 'animate' –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ shouldAnimate === true */}
          <div className={`race-car player-car ${shouldAnimate ? 'animate' : ''}`}>
            {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –º–∞—à–∏–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∏–∫–æ–Ω–∫—É */}
            {imageUrl ? <img src={imageUrl} alt={carName}/> : <span>üöó</span>}
          </div>
          {/* –ú–∞—à–∏–Ω–∞ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ */}
          <div className={`race-car opponent-car ${shouldAnimate ? 'animate' : ''}`}>
            <span>{opponentIcon}</span>
          </div>
          {/* –§–∏–Ω–∏—à–Ω–∞—è —á–µ—Ä—Ç–∞ */}
          <div className="finish-line"></div>
        </div>
      </div>
      {/* --- –ö–æ–Ω–µ—Ü –ó–æ–Ω—ã –ê–Ω–∏–º–∞—Ü–∏–∏ --- */}


      {/* –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç–∞ –ó–∞–µ–∑–¥–∞ */}
      <button
        className="start-race-button"
        onClick={handleRaceClick}
        disabled={isRacing || !playerCar} // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≥–æ–Ω–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω—ã
      >
        {/* –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –≥–æ–Ω–∫–∏ */}
        {isRacing ? '–ì–æ–Ω–∫–∞...' : '–ù–∞—á–∞—Ç—å –ó–∞–µ–∑–¥!'}
      </button>

      {/* --- –û–±–ª–∞—Å—Ç—å –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –†–µ–∑—É–ª—å—Ç–∞—Ç–∞ --- */}
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–Ω–∫–∏ (!isRacing) */}
      {!isRacing && raceResult && (
            <div className={`race-result ${raceResult}`}>
                <h3>
                    {raceResult === 'win' ? '–ü–û–ë–ï–î–ê!' : raceResult === 'lose' ? '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ' : '–û—à–∏–±–∫–∞ –≥–æ–Ω–∫–∏!'}
                </h3>
                {/* –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—ä–µ–∫—Ç –Ω–∞–≥—Ä–∞–¥—ã —Å—É—â–µ—Å—Ç–≤—É–µ—Ç */}
                {reward ? (
                    <p>
                      –ù–∞–≥—Ä–∞–¥–∞:
                      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç—ã, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö > 0 */}
                      {reward.coins > 0 && ` üí∞ ${reward.coins.toLocaleString()} GC`}
                      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º XP, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö > 0 */}
                      {reward.xp > 0 && ` ‚ú® ${reward.xp} XP`}
                      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏ –±–µ–∑ –Ω–∞–≥—Ä–∞–¥—ã */}
                      {(reward.coins === 0 && reward.xp === 0 && raceResult === 'lose') && ' –£–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!'}
                      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–±–µ–¥–µ –±–µ–∑ –Ω–∞–≥—Ä–∞–¥—ã (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ) */}
                      {(reward.coins === 0 && reward.xp === 0 && raceResult === 'win') && ' –ë–µ–∑ –Ω–∞–≥—Ä–∞–¥—ã'}
                    </p>
                ) : (
                    // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–∞–≥—Ä–∞–¥—ã null (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –æ—à–∏–±–∫–µ)
                    raceResult !== 'error' && <p>–ù–∞–≥—Ä–∞–¥–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞.</p>
                )}
            </div>
        )}
      {/* --- –ö–æ–Ω–µ—Ü –û–±–ª–∞—Å—Ç–∏ –†–µ–∑—É–ª—å—Ç–∞—Ç–∞ --- */}

    </div> // –ó–∞–∫—Ä—ã–≤–∞–µ–º .race-screen
  );
}

export default RaceScreen; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç