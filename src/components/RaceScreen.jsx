import React, { useState } from 'react';
import './RaceScreen.css'; // –°—Ç–∏–ª–∏

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—É—â—É—é –º–∞—à–∏–Ω—É –∏–≥—Ä–æ–∫–∞ –∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≥–æ–Ω–∫–∏
function RaceScreen({ playerCar, onStartRace }) {
  const [selectedDifficulty, setSelectedDifficulty] = useState('easy'); // 'easy', 'medium', 'hard'
  const [raceResult, setRaceResult] = useState(null); // null, 'win', 'lose'
  const [reward, setReward] = useState(null); // { coins: number, xp: number }
  const [isRacing, setIsRacing] = useState(false); // –§–ª–∞–≥, –∏–¥–µ—Ç –ª–∏ –≥–æ–Ω–∫–∞

  const handleDifficultyChange = (difficulty) => {
    setSelectedDifficulty(difficulty);
    setRaceResult(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    setReward(null);
  };

  const handleRaceClick = async () => {
    if (isRacing || !playerCar) return; // –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –≥–æ–Ω–∫–∞ –∏–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω—ã

    setIsRacing(true);
    setRaceResult(null);
    setReward(null);

    console.log(`Starting race with difficulty: ${selectedDifficulty}`);

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ App.jsx –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≥–æ–Ω–∫–∏
    // –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç { result: 'win'/'lose', reward: { coins, xp } }
    const resultData = await onStartRace(selectedDifficulty);

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ —Å–∏–º—É–ª—è—Ü–∏–∏
    if (resultData) {
        setRaceResult(resultData.result);
        setReward(resultData.reward);
        console.log("Race finished:", resultData);
    } else {
        console.error("Race simulation failed to return data.");
        // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    }


    setIsRacing(false);
  };

  // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const { name: carName, stats: carStats } = playerCar || {};

  return (
    <div className="race-screen">
      <h2>–£–ª–∏—á–Ω—ã–µ –ì–æ–Ω–∫–∏ (PvE)</h2>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã –∏–≥—Ä–æ–∫–∞ */}
      {playerCar && (
          <div className="player-car-info">
              <h3>–¢–≤–æ—è –º–∞—à–∏–Ω–∞: {carName}</h3>
              <p>P: {carStats?.power} | S: {carStats?.speed} | R: {carStats?.reliability}</p>
          </div>
      )}

      {/* –í—ã–±–æ—Ä –°–ª–æ–∂–Ω–æ—Å—Ç–∏ */}
      <div className="difficulty-selector">
        <h4>–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å:</h4>
        <button onClick={() => handleDifficultyChange('easy')} className={selectedDifficulty === 'easy' ? 'active' : ''}>–õ–µ–≥–∫–æ</button>
        <button onClick={() => handleDifficultyChange('medium')} className={selectedDifficulty === 'medium' ? 'active' : ''}>–°—Ä–µ–¥–Ω–µ</button>
        <button onClick={() => handleDifficultyChange('hard')} className={selectedDifficulty === 'hard' ? 'active' : ''}>–°–ª–æ–∂–Ω–æ</button>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç–∞ */}
      <button
        className="start-race-button"
        onClick={handleRaceClick}
        disabled={isRacing || !playerCar} // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≥–æ–Ω–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω—ã
      >
        {isRacing ? '–ì–æ–Ω–∫–∞...' : '–ù–∞—á–∞—Ç—å –ó–∞–µ–∑–¥!'}
      </button>

      {/* –û–±–ª–∞—Å—Ç—å –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –†–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
      {isRacing && <div className="race-in-progress">–°–∏–º—É–ª—è—Ü–∏—è –≥–æ–Ω–∫–∏... ‚è±Ô∏è</div>}

      {!isRacing && raceResult && (
        <div className={`race-result ${raceResult}`}>
          <h3>{raceResult === 'win' ? '–ü–û–ë–ï–î–ê!' : '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ'}</h3>
          {reward && (
            <p>
              –ù–∞–≥—Ä–∞–¥–∞:
              {reward.coins > 0 && ` üí∞ ${reward.coins.toLocaleString()} GC`}
              {reward.xp > 0 && ` ‚ú® ${reward.xp} XP`}
              {!reward.coins && !reward.xp && raceResult === 'lose' && ' –£–¥–∞—á–∏ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!'}
            </p>
          )}
        </div>
      )}
    </div>
  );
}

export default RaceScreen;